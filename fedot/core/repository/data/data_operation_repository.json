{
	"metadata":{
		"sklearn_preprocessing": {
			"tasks": "[TaskTypesEnum.classification, TaskTypesEnum.regression, TaskTypesEnum.clustering, TaskTypesEnum.ts_forecasting]",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"accepted_node_types": ["any"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.common_preprocessing", "CustomPreprocessingStrategy"],
			"tags": ["sklearn"],
			"description": "Implementations of the preprocessing from scikit-learn framework"},
		"sklearn_categorical": {
			"tasks": "[TaskTypesEnum.classification, TaskTypesEnum.regression, TaskTypesEnum.clustering]",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"accepted_node_types": ["primary"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.common_preprocessing", "CustomPreprocessingStrategy"],
			"tags": ["sklearn"],
			"description": "Implementations of OneHot encoding (etc.) from scikit-learn framework"},
		"dimension_transformation": {
			"tasks": "[TaskTypesEnum.classification, TaskTypesEnum.regression, TaskTypesEnum.clustering, TaskTypesEnum.ts_forecasting]",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"accepted_node_types": ["any"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.common_preprocessing", "CustomPreprocessingStrategy"],
			"tags": ["sklearn"],
			"description": "Implementations of the dimensionality transformation operations (e.g. PCA) from scikit-learn framework"},
		"sklearn_regression_filters": {
			"tasks": "[TaskTypesEnum.regression, TaskTypesEnum.ts_forecasting]",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"accepted_node_types": ["any"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.regression", "CustomRegressionPreprocessingStrategy"],
			"tags": ["sklearn"],
			"description": "Implementations of the feature selection operations and robust data filtering from scikit-learn framework for regression task"},
		"sklearn_classification_filters": {
			"tasks": "[TaskTypesEnum.classification]",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"accepted_node_types": ["any"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.classification", "CustomClassificationPreprocessingStrategy"],
			"tags": ["sklearn"],
			"description": "Implementations of the feature selection operations and robust data filtering from scikit-learn framework for classification task"},
		"custom_time_series_transformation": {
			"tasks": "[TaskTypesEnum.ts_forecasting]",
			"input_type": "[DataTypesEnum.ts]",
			"output_type": "[DataTypesEnum.ts, DataTypesEnum.table]",
			"accepted_node_types": ["any"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.time_series", "CustomTsTransformingStrategy"],
			"tags": ["time_series"],
			"description": "Preprocessing for converting uni-variate time-series into table form or transform it"},
		"text_preprocessing": {
			"tasks": "[TaskTypesEnum.classification]",
			"input_type": "[DataTypesEnum.text]",
			"output_type": "[DataTypesEnum.text, DataTypesEnum.table]",
			"accepted_node_types": [
				"any"
			],
			"forbidden_node_types": "[]",
			"strategies": [
				"fedot.core.operations.evaluation.text",
				"CustomTextPreprocessingStrategy"
			],
			"tags": [
				"text",
				"non-default"
			],
			"description": "Preprocessing operations for text classification"
		}
	},
	"operations":{
		"scaling": {
			"meta": "sklearn_preprocessing",
			"tags": ["simple"]
		},
		"normalization": {
			"meta": "sklearn_preprocessing",
			"tags": ["simple"]
		},
		"simple_imputation": {
			"meta": "sklearn_preprocessing",
			"tags": ["simple", "imputation"]
		},
		"pca": {
			"meta": "dimension_transformation",
			"tags": ["linear", "dimensionality_transforming"]
		},
		"kernel_pca": {
			"meta": "dimension_transformation",
			"tags": [
				"non_linear",
				"dimensionality_transforming",
				"non-default"
			]
		},
		"poly_features": {
			"meta": "dimension_transformation",
			"tags": ["non_linear", "dimensionality_transforming"]
		},
		"one_hot_encoding": {
			"meta": "sklearn_categorical",
			"tags": ["categorical", "dimensionality_transforming"]
		},
		"ransac_lin_reg": {
			"meta": "sklearn_regression_filters",
			"tags": ["affects_target", "linear", "filtering"]
		},
		"ransac_non_lin_reg": {
			"meta": "sklearn_regression_filters",
			"tags": ["affects_target", "non_linear", "filtering"]
		},
		"rfe_lin_reg": {
			"meta": "sklearn_regression_filters",
			"tags": ["linear", "feature_selection"]
		},
		"rfe_non_lin_reg": {
			"meta": "sklearn_regression_filters",
			"tags": ["non_linear", "feature_selection"]
		},
		"rfe_lin_class": {
			"meta": "sklearn_classification_filters",
			"tags": ["linear", "feature_selection"]
		},
		"rfe_non_lin_class": {
			"meta": "sklearn_classification_filters",
			"tags": ["non_linear", "feature_selection"]
		},
		"lagged": {
			"meta": "custom_time_series_transformation",
			"tags": ["affects_target", "dimensionality_transforming", "ts_specific"]
		},
		"smoothing": {
			"meta": "custom_time_series_transformation",
			"tags": ["simple", "smoothing", "ts_specific"]
		},
		"gaussian_filter": {
			"meta": "custom_time_series_transformation",
			"tags": ["simple", "smoothing", "ts_specific"]
		},
		"exog": {
			"meta": "custom_time_series_transformation",
			"tags": ["simple", "ts_specific"]
		},
		"text_clean": {
			"meta": "text_preprocessing",
			"tags": []
		}
	}
}