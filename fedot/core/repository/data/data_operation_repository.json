{
	"metadata":{
		"data_sources": {
			"tasks": "[TaskTypesEnum.classification, TaskTypesEnum.regression, TaskTypesEnum.clustering, TaskTypesEnum.ts_forecasting]",
			"accepted_node_types": [
				"PrimaryNode"
			],
			"forbidden_node_types": "[]",
			"strategies": [
				"fedot.core.operations.evaluation.data_source",
				"DataSourceStrategy"
			],
			"tags": [
				"non-default", "data_source"
			],
			"description": "Implementations of data sources in multi-modal pipelines"
		},
		"custom_preprocessing": {
			"tasks": "[TaskTypesEnum.classification, TaskTypesEnum.regression, TaskTypesEnum.clustering, TaskTypesEnum.ts_forecasting]",
			"input_type": "[DataTypesEnum.table, DataTypesEnum.ts]",
			"output_type": "[DataTypesEnum.table, DataTypesEnum.ts]",
			"accepted_node_types": [
				"any"
			],
			"forbidden_node_types": "[]",
			"strategies": [
				"fedot.core.operations.evaluation.common_preprocessing",
				"FedotPreprocessingStrategy"
			],
			"tags": [
				"sklearn"
			],
			"description": "Implementations of the preprocessing from scikit-learn framework"
		},
		"sklearn_categorical": {
			"tasks": "[TaskTypesEnum.classification, TaskTypesEnum.regression, TaskTypesEnum.clustering]",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"accepted_node_types": ["primary"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.common_preprocessing", "FedotPreprocessingStrategy"],
			"tags": ["sklearn"],
			"description": "Implementations of OneHot encoding (etc.) from scikit-learn framework"},
		"dimension_transformation": {
			"tasks": "[TaskTypesEnum.classification, TaskTypesEnum.regression, TaskTypesEnum.clustering, TaskTypesEnum.ts_forecasting]",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"accepted_node_types": ["any"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.common_preprocessing", "FedotPreprocessingStrategy"],
			"tags": ["sklearn"],
			"description": "Implementations of the dimensionality transformation operations (e.g. PCA) from scikit-learn framework"},
		"regression_preprocessing": {
			"tasks": "[TaskTypesEnum.regression, TaskTypesEnum.ts_forecasting]",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"accepted_node_types": ["any"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.regression", "FedotRegressionPreprocessingStrategy"],
			"tags": ["sklearn"],
			"description": "Implementations of the feature selection operations and robust data filtering from scikit-learn framework for regression task"},
		"classification_preprocessing": {
			"tasks": "[TaskTypesEnum.classification]",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"accepted_node_types": ["any"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.classification", "FedotClassificationPreprocessingStrategy"],
			"tags": ["sklearn"],
			"description": "Implementations of the feature selection operations and robust data filtering from scikit-learn framework for classification task"},
		"custom_time_series_transformation": {
			"tasks": "[TaskTypesEnum.ts_forecasting]",
			"input_type": "[DataTypesEnum.ts, DataTypesEnum.multi_ts]",
			"output_type": "[DataTypesEnum.ts, DataTypesEnum.table]",
			"accepted_node_types": ["any"],
			"forbidden_node_types": "[]",
			"strategies": ["fedot.core.operations.evaluation.time_series", "FedotTsTransformingStrategy"],
			"tags": ["time_series"],
			"description": "Preprocessing for converting uni-variate time-series into table form or transform it"},
		"text_preprocessing": {
			"tasks": "[TaskTypesEnum.classification]",
			"input_type": "[DataTypesEnum.text]",
			"output_type": "[DataTypesEnum.text, DataTypesEnum.table]",
			"accepted_node_types": [
				"any"
			],
			"forbidden_node_types": "[]",
			"strategies": [
				"fedot.core.operations.evaluation.text",
				"FedotTextPreprocessingStrategy"
			],
			"tags": [
				"text",
				"non-default"
			],
			"description": "Preprocessing operations for text classification"
		},
		"text_preprocessing_sklearn": {
			"description": "Text preprocessing sklearn",
			"forbidden_node_types": "[]",
			"input_type": "[DataTypesEnum.text]",
			"output_type": "[DataTypesEnum.table]",
			"strategies": [
				"fedot.core.operations.evaluation.text",
				"SkLearnTextVectorizeStrategy"
			],
			"tags": [
				"text",
				"nlp",
				"non-default"
			],
			"tasks": "[TaskTypesEnum.classification]"
		},
		"text_classification_gensim": {
			"description": "Text classification",
			"forbidden_node_types": [
				"secondary"
			],
			"input_type": "[DataTypesEnum.text]",
			"output_type": "[DataTypesEnum.table]",
			"strategies": [
				"fedot.core.operations.evaluation.text",
				"GensimTextVectorizeStrategy"
			],
			"tags": [
				"text",
				"nlp",
				"non-default"
			],
			"tasks": "[TaskTypesEnum.classification]"
		}
	},
	"operations": {
		"data_source_img": {
			"meta": "data_sources",
			"input_type": "[DataTypesEnum.image]",
			"output_type": "[DataTypesEnum.image]",
			"tags": ["data_source_img", "nans-ignore", "categorical-ignore", "non_applicable_for_ts"]
		},
		"data_source_text": {
			"meta": "data_sources",
			"input_type": "[DataTypesEnum.text]",
			"output_type": "[DataTypesEnum.text]",
			"tags": ["data_source_text", "nans-ignore", "categorical-ignore", "non_applicable_for_ts"]
		},
		"data_source_table": {
			"meta": "data_sources",
			"input_type": "[DataTypesEnum.table]",
			"output_type": "[DataTypesEnum.table]",
			"tags": ["data_source_table", "nans-ignore", "categorical-ignore", "non_applicable_for_ts"]
		},
		"data_source_ts": {
		  "meta": "data_sources",
		  "tags": ["data_source_ts", "non_lagged", "non-default", "nans-ignore", "categorical-ignore"],
		  "input_type": "[DataTypesEnum.ts]",
		  "output_type": "[DataTypesEnum.ts]"
		},
		"scaling": {
			"meta": "custom_preprocessing",
			"presets": ["fast_train", "ts", "*tree"],
			"tags": ["simple", "feature_scaling"]
		},
		"normalization": {
			"meta": "custom_preprocessing",
			"presets": ["fast_train", "ts", "*tree"],
			"tags": ["simple", "feature_scaling"]
		},
		"simple_imputation": {
			"meta": "custom_preprocessing",
			"presets": ["fast_train", "*tree"],
		  	"tags": ["simple", "imputation", "categorical-ignore", "non-default"]
		},
		"pca": {
			"meta": "dimension_transformation",
			"presets": ["fast_train", "ts", "*tree"],
			"tags": ["linear", "dimensionality_transforming", "correct_params", "non_applicable_for_ts",
				"feature_reduction"]
		},
		"kernel_pca": {
			"meta": "dimension_transformation",
			"presets": ["ts", "*tree"],
			"tags": [
				"non_linear",
				"dimensionality_transforming",
				"correct_params",
				"non_applicable_for_ts",
				"non-default",
				"feature_reduction"
			]
		},
		"fast_ica": {
			"meta": "dimension_transformation",
			"presets": ["ts", "*tree"],
			"tags": [
				"non_linear",
				"dimensionality_transforming",
				"correct_params",
				"non_applicable_for_ts",
				"feature_reduction"
			]
		},
		"poly_features": {
			"meta": "dimension_transformation",
			"tags": ["non_linear", "dimensionality_transforming", "non_applicable_for_ts", "feature_engineering"]
		},
		"one_hot_encoding": {
			"meta": "sklearn_categorical",
			"tags": ["encoding", "categorical", "dimensionality_transforming", "non_applicable_for_ts", "non-default"]
		},
		"label_encoding": {
			"meta": "sklearn_categorical",
			"presets": ["fast_train", "*tree"],
			"tags": ["encoding", "categorical", "non-default", "non_applicable_for_ts"]
		},
		"ransac_lin_reg": {
			"meta": "regression_preprocessing",
			"presets": ["fast_train", "*tree"],
			"tags": ["affects_target", "linear", "filtering", "correct_params", "non_applicable_for_ts"]
		},
		"ransac_non_lin_reg": {
			"meta": "regression_preprocessing",
			"presets": ["fast_train", "*tree"],
			"tags": ["affects_target", "non_linear", "filtering", "correct_params", "non_applicable_for_ts"]
		},
		"isolation_forest_reg": {
			"meta": "regression_preprocessing",
			"tags": ["non_linear", "filtering"]
		},
		"isolation_forest_class": {
			"meta": "classification_preprocessing",
			"tags": ["non_linear", "filtering"]
		},
		"rfe_lin_reg": {
			"meta": "regression_preprocessing",
			"tags": ["linear", "feature_selection", "non_applicable_for_ts", "non-default"]
		},
		"rfe_non_lin_reg": {
			"meta": "regression_preprocessing",
			"tags": ["non_linear", "feature_selection", "non_applicable_for_ts", "non-default"]
		},
		"rfe_lin_class": {
			"meta": "classification_preprocessing",
			"tags": ["linear", "feature_selection", "non-default"]
		},
		"rfe_non_lin_class": {
			"meta": "classification_preprocessing",
			"tags": ["non_linear", "feature_selection", "non-default"]
		},
		"lagged": {
			"meta": "custom_time_series_transformation",
			"presets": ["fast_train", "ts"],
			"tags": [
				"affects_target",
				"dimensionality_transforming",
				"non_lagged",
				"correct_params",
				"ts_to_table"
			],
			"input_type": "[DataTypesEnum.multi_ts, DataTypesEnum.ts]"
		},
		"sparse_lagged": {
			"meta": "custom_time_series_transformation",
			"presets": ["fast_train", "ts"],
			"tags": [
				"affects_target",
				"dimensionality_transforming",
				"non_lagged",
				"correct_params",
				"ts_to_table"
			],
			"input_type": "[DataTypesEnum.multi_ts, DataTypesEnum.ts]"
		},
		"smoothing": {
			"meta": "custom_time_series_transformation",
			"presets": ["fast_train", "ts"],
			"tags": [
				"simple",
				"smoothing",
				"non_lagged"
			],
			"input_type": "[DataTypesEnum.multi_ts, DataTypesEnum.ts]"
		},
		"gaussian_filter": {
			"meta": "custom_time_series_transformation",
			"presets": ["fast_train", "ts"],
			"tags": [
				"simple",
				"smoothing",
				"non_lagged"
			],
			"input_type": "[DataTypesEnum.multi_ts, DataTypesEnum.ts]"
		},
		"diff_filter": {
			"meta": "custom_time_series_transformation",
			"presets": ["fast_train", "ts"],
			"tags": [
				"differential",
				"non_lagged",
				"correct_params",
				"ts_to_ts"
			],
			"input_type": "[DataTypesEnum.multi_ts, DataTypesEnum.ts]"
		},
		"cut": {
			"meta": "custom_time_series_transformation",
			"presets": ["fast_train", "ts"],
			"tags": [
				"simple",
				"cutting",
				"correct_params",
				"non_lagged",
				"ts_to_ts"
			],
			"input_type": "[DataTypesEnum.multi_ts, DataTypesEnum.ts]"
		},
		"exog_ts": {
			"meta": "custom_time_series_transformation",
			"tags": [
				"simple",
				"non_lagged",
				"ts_to_table"
			]
		},
		"text_clean": {
			"meta": "text_preprocessing",
			"tags": ["non_applicable_for_ts"]
		},
		"cntvect": {
			"meta": "text_preprocessing_sklearn",
			"tags": ["non-default"]
		},
		"tfidf": {
			"meta": "text_preprocessing_sklearn",
			"tags": ["non-default"]
		},
		"word2vec_pretrained": {
			"meta": "text_classification_gensim",
			"tags": ["non-default"]
		},
		"decompose": {
		  "meta": "regression_preprocessing",
		  "presets": ["fast_train", "ts", "*tree"],
		  "tags": ["non-default", "decompose"]
		},
		"class_decompose": {
		  "meta": "classification_preprocessing",
		  "presets": ["fast_train", "*tree"],
		  "tags": ["non-default", "decompose"]
        },
        "resample": {
          "meta": "classification_preprocessing",
          "tags": ["imbalanced"]
		}
	}
}
